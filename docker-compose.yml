version: '3'

services:
  backend: #Dotnet webapi
    image: mcr.microsoft.com/dotnet/sdk:7.0
    container_name: backend
    command: >
      bash -c "dotnet run"
    working_dir: /app
    # depends_on:
      # - database
    volumes:
      - ./backend/LaakAPI:/app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - url=http://api.localhost  #Caddy config
    scale: 1
    labels:
      #Traefik config
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
 
    expose:
      - 7290
    restart: unless-stopped

    
  frontend: #React frontend
    image: node
    container_name: frontend
    command: > 
      bash -c "npm install -g serve && serve -s build"
    working_dir: /app
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
      - url=http://frontend.localhost  #Caddy config
    scale: 1
    labels:
      #Traefik config
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`) || Host(`www.frontend.localhost`)" 
      - 'traefik.backend=node'
    expose:
      - 3000
    restart: unless-stopped


  test-app: #Simple test app mostly to check if traefik is working wihout waiting for front/backend
    image: containous/whoami:v1.3.0
    hostname: whoami
    container_name: whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.test-app.rule=Host(`test.localhost`)"


  traefik: #Reverse proxy, please don't touch
    image: "traefik:v2.9.6"
    container_name: "traefik"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    ports:
      - "80:80"
      - "8080:8080" #Dashboard, remove in prod
    
    restart: unless-stopped





  # caddy:
  #   image: caddy:alpine
    
  #   volumes:
  #           - ./Proxy/Caddy/Caddyfile:/etc/caddy/Caddyfile
  #           - ./Proxy/Caddy//data:/data # Optional
  #           - ./Proxy/Caddy/config:/config # Optional
  #   ports:
  #           - "80:80"
  #           - "443:443"
  #   restart: unless-stopped




