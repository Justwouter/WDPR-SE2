version: '3'

services:
  backend:
    image: mcr.microsoft.com/dotnet/sdk:7.0
    container_name: backend
    command: >
      bash -c "dotnet dev-certs https && dotnet run"
    working_dir: /app
    # depends_on:
      # - database
    volumes:
      - ./backend:/app
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # - ASPNETCORE_HTTPS_PORT=7290
      - url=https://api.localhost  #Caddy config
    scale: 1
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web,websecure" 
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"  
      - 'traefik.port=7290'
    # ports:
    #   - "4000:7290"
    expose:
      - 7290
    restart: unless-stopped

    
  frontend:
    image: node
    container_name: frontend
    command: [ "npm", "start" ]
    working_dir: /app
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    environment:
      - CHOKIDAR_USEPOLLING=true
      - url=https://frontend.localhost  #Caddy config
    scale: 1
    labels:
      #Traefik config
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.localhost`) || Host(`www.frontend.localhost`)"
      - "traefik.http.routers.frontend.entrypoints=web,websecure" 
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"   
      - 'traefik.backend=node'
      - 'traefik.port=3000'
    # ports:
    #   - "4001:80"
    expose:
      - 3000
    restart: unless-stopped
    
    
  traefik:
    image: "traefik:v2.9.6"
    container_name: "traefik"
    command:
      - "--api.dashboard=true"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443" 
      - "--certificatesresolvers.myresolver.acme.tlschallenge=true" 
      - "--certificatesresolvers.myresolver.acme.email=Admin@theaterlaak.site" 
      - "--certificatesresolvers.myresolver.acme.storage=Proxy/Traefik/letsencrypt/acme.json" 
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "Proxy/Traefik/letsencrypt:/letsencrypt"
    ports:
      - "80:80"
      - "8080:8080"
    restart: unless-stopped

  # caddy:
  #   image: caddy:alpine
    
  #   volumes:
  #           - ./Proxy/Caddy/Caddyfile:/etc/caddy/Caddyfile
  #           - ./Proxy/Caddy//data:/data # Optional
  #           - ./Proxy/Caddy/config:/config # Optional
  #   ports:
  #           - "80:80"
  #           - "443:443"
  #   restart: unless-stopped
    

